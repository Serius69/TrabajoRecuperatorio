openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Serius69/Waliki/1.0.0
info:
  title: Waliki
  # Added by API Auto Mocking Plugin
  
  description: API REST demo para los mockups de la aplicacion Web Waliki
  termsOfService: http://waliki.com/terms/
  version: 1.0.0
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
    
# host: twitter.com
# basePath: /api/v1


#servers:
#- description: Entorno local
#  url: https://localhost:8080/

tags:
- name: RegistroDonante
  description: Endpoints para el mockup de Registro usuario - donante
- name: PerfilDonanteProyectoVigente
  description: Endpoints para el mockup de Perfil de donante - Proyectos Vigentes
- name: PerfilDonanteProyectoProceso
  description: Endpoints para el mockup de Perfil de donante - Proyectos en Proceso
- name: ListadoDonadores
  description: Endpoints para el mockup de Listado de donadores
- name: ConfirmarDonacion
  description: Endpoints para el mockup de Confirmar Donacion
  
  
- name: persona
  description: Endpoints para la gestion de personas
- name: donador
  description: Endpoints para la gestion de donador
- name: usuario
  description: Endpoints para la gestion de usuario
- name: proyecto
  description: Endpoints para la gestion de proyecto
- name: donacion
  description: Endpoints para la gestion de donador
- name: contrato
  description: Endpoints para la gestion de contrato

# schemes:
# - http    
paths:
  /contrato/{id_contrato}:
    get:
      tags:
      - RegistroDonante
      summary: Buscar contrato por Id
      description: Retorna un donador
      operationId: getContratoById
      parameters:
      - name: id_contrato
        in: path
        description: ID del contrato a retornar
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contrato'
        404:
          description: No se encontro el donador solicitado
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'  
  /persona:
    post:
      tags:
      - RegistroDonante
      summary: Crear persona
      operationId: addPersona
      requestBody:
        description: Agregar una nueva persona a la BD
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/persona'
          application/xml:
            schema:
              $ref: '#/components/schemas/persona'
        required: true
      responses:
        200:
          description: Crear nueva persona
        404:
          description: No existe la tabla persona donde guardar el nuevo dato
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
########################################################################  
  /donador:
    get:
      tags:
      - ListadoDonadores
      summary: Muestra todos los donadores
      description: Retorna todos los donadores registrados en el sistema
      operationId: getAllDonador
      responses:
        200:
          description: Se encontro los donadores almacenados en la base de datos
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/donador'
        404:
          description: No existen donadores en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
    post:
      tags:
      - RegistroDonante
      summary: Agrega un nuevo donador
      operationId: addDonador
      requestBody:
        description: Registra un nuevo donador con los datos que se tiene  en el mockup
          Nombre usuario
          Correo electronico
          Nomero de telefono
          Direccion
          Contrasenia
          Confirmar Contrasenia
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/donador'
          application/xml:
            schema:
              $ref: '#/components/schemas/donador'
        required: true
      responses:
        200:
          description: Se registro con exito el nuevo donante
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/donador'
        404:
          description: No existen donadores en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
    put:
      tags:
      - RegistroDonante
      summary: Actualiza un donador existente
      operationId: updateDonador
      requestBody:
        description: Objeto donador que tiene que ser agregada
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/donador'
          application/xml:
            schema:
              $ref: '#/components/schemas/donador'
        required: true
      responses:
        400:
          description: Id invalido
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        404:
          description: No existen contratos en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
#######################################################################      
  /contrato:
    get:
      tags:
      - contrato
      summary: Muestra los contratos
      description: Muestra el contrato
      operationId: getContrato
      responses:
        200:
          description: Se encontro el contrato
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contrato'
        404:
          description: No existen contratos en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
##############################################################
  /proyecto/{id_estado}/1:
    get:
      tags:
      - PerfilDonanteProyectoVigente
      summary: Muestra los proyectos vigentes
      description: Retorna todos los proyectos que aun esten en estado de Vigencia  Imagen - Monto a recaudar - Dias que falta
      operationId: getProyectoVigente
      parameters:
      - name: id_estado
        in: path
        description: id del estado del proyecto 
        required: true
        schema:
          type: integer
          example: 1
      responses:
        200:
          description: Operacion exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proyecto'
        404:
          description: No existen proyectos vigentes en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
  /donador/{nombre_donador}:
    get:
      tags:
      - ListadoDonadores
      summary: Buscar donador por nombre completo
      description: Busca un donador por su nombre completo y retorna todos los proyectos en los que participo
      operationId: getDonadorByName
      parameters:
      - name: nombre_donador
        in: path
        description: Nombre completo del donador
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/donador'
            application/json:
              schema:
                $ref: '#/components/schemas/donador'
        404:
          description: No se encontro el donador solicitado
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
  /donador/{id_donador}:
    get:
      tags:
      - donador
      summary: Buscar donador por Id
      description: Busca un donador por su nombre y retorna todos los proyectos en los que participo
      operationId: getDonadorById
      parameters:
      - name: id_donador
        in: path
        description: ID of pet to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/donador'
            application/json:
              schema:
                $ref: '#/components/schemas/donador'
        404:
          description: No se encontro el donador solicitado
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
    post:
      tags:
      - donador
      summary: Updates a donador with form data
      operationId: addDonadorwithForm
      parameters:
      - name: id_donador
        in: path
        description: ID of pet that needs to be updated
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                usuario:
                  type: string
                  description: Updated name of the pet
                status:
                  type: string
                  description: Updated status of the pet
      responses:
        405:
          description: Entrada de datos incorrecta
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
      
    delete:
      tags:
      - donador
      summary: Elimina un donador
      operationId: deleteDonador
      parameters:
      - name: api_key
        in: header
        schema:
          type: string
      - name: id_donador
        in: path
        description: Donador id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Id invalido
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        404:
          description: No se encontro el donador solicitado
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
  /donador/proyecto/{id_proyecto}:
    get:
      tags:
      - donador
      summary: Mostrar los donadores de un determinado proyecto
      description: Muestra todos los proyectos que un determinado donador realizo data( Proyectos que participo / Monto )
      operationId: getDonadoresByIdProyecto
      parameters:
      - name: id_proyecto
        in: path
        description: ID de las donaciones
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/donacion'
            application/json:
              schema:
                $ref: '#/components/schemas/donacion'
        404:
          description: No se encontro el donador solicitado
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
                
  /usuario/{id_usuario}:
    get:
      tags:
      - usuario
      summary: Get user by user name
      operationId: getUserByName
      parameters:
      - name: id_usuario
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/usuario'
            application/json:
              schema:
                $ref: '#/components/schemas/usuario'
        400:
          description: Invalid username supplied
          content: {}
        404:
          description: User not found
          content: {}
    put:
      tags:
      - usuario
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
      - name: id_usuario
        in: path
        description: name that need to be updated
        required: true
        schema:
          type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/usuario'
        required: true
      responses:
        400:
          description: Invalid user supplied
          content: {}
        404:
          description: User not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - usuario
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
      - name: id_usuario
        in: path
        description: The name that needs to be deleted
        required: true
        schema:
          type: string
      responses:
        400:
          description: Invalid username supplied
        404:
          description: User not found
          
  /proyecto:
    get:
      tags:
      - proyecto
      summary: Muestra Todos los proyectos
      description: Retorna y muestra todos los proyectos vigentes Titulo - Monto requerido - Tiempo restante
      
      operationId: getAllProyectos
      responses:
        200:
          description: Se encontraron los proyectos vigentes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/donador'
        404:
          description: No existen proyectos vigentes en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
    post:
      tags:
      - proyecto
      summary: Agrega un nuevo proyecto
      operationId: addProyecto
      requestBody:
        description: Objeto p se agrega
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/proyecto'
          application/xml:
            schema:
              $ref: '#/components/schemas/proyecto'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
    
  /proyecto/{nombre_proyecto}:
    get:
      tags:
      - PerfilDonanteProyectoVigente
      summary: Buscar proyecto por nombre
      description: Buscsa un proyecto almacenado en la base datos que sea igual al nombre puesto en el buscador
      operationId: getProyectoByNombre
      parameters:
      - name: nombre_proyecto
        in: path
        description: Nombre del proyecto a retornar
        required: true
        schema:
          type: string
        example: 'Proyecto A'
      responses:
        200:
          description: Operacion exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proyecto'
        404:
          description: No existen donaciones en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
      
  
  /proyecto/{id_estado}/2:
    get:
      tags:
      - PerfilDonanteProyectoProceso
      summary: Muestra los proyectos en proceso
      description: Retorna todos los proyectos que aun esten en estado de vigencia  Imagen - Nombre del Proyecto - Fecha de inicio - Fecha final
      operationId: getProyectoEnProceso
      parameters:
      - name: id_estado
        in: path
        description: id del estado del proyecto 
        required: true
        schema:
          type: integer
          example: 2
      responses:
        200:
          description: Operacion exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/proyecto'
        404:
          description: No existen donaciones en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'     
  
  /donacion:
    get:
      tags:
      - donacion
      summary: Retorna todas las donaciones
      description: Retorna todas las donaciones almacenadas
      operationId: getDonacion
      responses:
        200:
          description: Operacion exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/donacion'
        404:
          description: No existen donaciones en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
    post:
      tags:
      - ConfirmarDonacion
      summary: Agrega una nueva donacion
      operationId: addDonacion
      requestBody:
        description: Objeto donador se agrega
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/donacion'
          application/xml:
            schema:
              $ref: '#/components/schemas/donacion'
        required: true
      responses:
        404:
          description: No existen donaciones en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        405:
          description: Entrada de datos invalida
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
#########################
#Components
#########################
  
        
components:
#################
#Schemas
##################
  schemas:
    error:
      type: object
      properties:
        errorCode:
          type: integer
          format: int64
        errorMessage:
          type: string
          description:  Mensaje del error
        errorDescription:
          type: string
          description: La descripcion en detalle del error
    estado:
      type: object
      properties:
        id_estado:
          type: integer
          description: Codigo unico del estado
        estado:
          type: string
      
    area:
      type: object
      properties:
        id_fecha:
          type: integer
          description: Codigo unico de la fecha valor minimo 1
        anio:
          type: string
    tipo_contrato:
      properties:
        id_tipo_contrato:
          type: integer
          description: Codigo unico del tipo de emprendimiento valor minimo 1
        tipo_contrato:
          type: string
          description: El tipo de emprendimiento que puede ser (basico, intermedio)
          
    tipo_emprendimiento:
      properties:
        id_tipo_emprendimiento:
          type: integer
          description: Codigo unico del tipo de emprendimiento valor minimo 1
        tipo_emprendimiento:
          type: string
          description: El tipo de emprendimiento que puede ser (basico, intermedio)
        id_area: 
          $ref: '#/components/schemas/area'
          
    fecha:
      type: object
      properties:
        id_fecha:
          type: integer
          description: Codigo unico de la fecha valor minimo 1
        anio:
          type: integer
          description: anio cardinal
        mes:
          type: string
          description: Mes (Enero....Diciembre)
        dia:
          type: integer
        fecha:
          type: string
          description: Mes (Enero....Diciembre)
    tipo_usuario:
      type: object
      properties: 
        id_tipo_usuario:
          type: integer
          format: int32
          description: Codigo unico de la fecha valor minimo 1
        tipo_usuario:
          type: string
          description: Codigo unico de la fecha valor minimo 1
    imagen:
      type: object
      properties:
        id_imagen:
          type: integer
          format: int64
        src_imagen:
          type: string
          format: int64
          description: codigo de ubicacion de la imagen
        nombre:
          type: string
          description: nombre de la imagen 
    
    departamento:
      type: object
      properties:
        id_departamento:
          type: integer
          format: int64
        departamento:
          type: string
          
    ciudad:
      type: object
      properties:
        id_ciudad:
          type: integer
          format: int64
        ciudad:
          type: string
        id_departamento:
          $ref: '#/components/schemas/departamento'
       
    direccion:
      type: object
      properties:
        id_persona:
          type: integer
          format: int64
        id_ciudad:
          $ref: '#/components/schemas/ciudad'
        zona:
          type: string
        calle:
          type: string
        longitud:
          type: integer
        latitud:
          type: integer
    
    persona:
      type: object
      properties:
        id_persona:
          type: integer
          description: Codigo unico de la persona
        nombre:
          type: string
          description: Nombre de la persona
        apellido_paterno:
          type: string
          description: Apellido paterno de la persona
        apellido_materno:
          type: string
          description: Apellido materno de la persona
        apellido_casado:
          type: string
          description: Apellido de casada de la persona(mujer) este espacio es opcional
        telefono:
          type: integer
          description: Telefono celular o local de la persona natural
        fecha_nacimiento:
          type: string
          format: date-time
          description: Fecha de nacimiento en formato dd/mm/aa
        id_direccion:
          $ref: '#/components/schemas/direccion'
  
    usuario:
      type: object
      properties:
        id_usuario:
          type: integer
          format: int64
          description: Codigo unico del usuario
        id_tipo_usuario:
          $ref: '#/components/schemas/tipo_usuario'
        usuario:
          type: integer
          format: int64
        contrasena:
          type: string
          format: password
      xml:
        name: usuario
    
    contrato:
      type: object
      properties:
        id_contrato:
          type: integer
          format: int64
          description: Codigo unico del contrato
        contrato:
          type: string
          description: Contenido del contrato
        id_tipo_contrato:
          $ref: '#/components/schemas/tipo_contrato'
      xml:
        name: contrato
    
    emprendedor:
      type: object
      properties:
        id_emprendedor:
          $ref: '#/components/schemas/tipo_usuario'
        id_imagen:
          $ref: '#/components/schemas/imagen'
        id_tipo_emprendimiento:
          $ref: '#/components/schemas/tipo_emprendimiento'
        id_contrato:
          $ref: '#/components/schemas/contrato'
        id_persona:
          $ref: '#/components/schemas/persona'
        id_usuario:
          $ref: '#/components/schemas/usuario'
    donador:
      type: object
      properties:
        id_donador:
          type: integer
          description: Codigo unico del usuario
        id_contrato:
          $ref: '#/components/schemas/contrato'
        id_persona:
          $ref: '#/components/schemas/persona'
        id_usuario:
          $ref: '#/components/schemas/usuario'
      xml:
        name: donador
    
    proyecto:
      type: object
      properties:
        id_proyecto:
          type: integer
          format: int64
          description: Codigo unico del proyecto valor minimo 1
        nombre:
          type: string
          description: Nombre del proyecto
        descripcion:
          type: string
          description: Descripcion especifica de que trata el proyecto almacenado
        monto_recaudar:
          type: number
          format: double
          description: Monto objetivo a recaudar
        id_fecha_inicio:
          $ref: '#/components/schemas/fecha'
        id_fecha_final:
          $ref: '#/components/schemas/usuario' 
        id_emprendedor:
          $ref: '#/components/schemas/emprendedor'
        id_estado:
          type: integer
          format: int32
          description: Codigo unico de la fecha valor minimo 1
    donacion:
      type: object
      properties:
        id_donacion:
          type: integer
          format: int64
          description: Codigo unico del proyecto valor minimo 1
        id_proyecto:
          $ref: '#/components/schemas/proyecto' 
        id_donador:
          $ref: '#/components/schemas/donador'
        id_fecha:
          $ref: '#/components/schemas/fecha'
        monto:
          type: integer
          format: int64
        hora:
          type: string
  parameters:
    offsetParam:
      name: offset
      in: query
      schema:
        type: integer
        minimum: 0
      description: La cantidad de elementos que se deben omitir antes de devolver los resultados
    limitParam:
      in: query
      name: limit
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 1
      description: La cantidad de elemento para devolver
  openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Serius69/Waliki/1.0.0
info:
  title: Waliki
  # Added by API Auto Mocking Plugin
  
  description: API REST demo para los mockups de la aplicacion Web Waliki
  termsOfService: http://waliki.com/terms/
  version: 1.0.0
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
    
# host: twitter.com
# basePath: /api/v1


#servers:
#- description: Entorno local
#  url: https://localhost:8080/

tags:
- name: RegistroDonante
  description: Endpoints para el mockup de Registro usuario - donante
- name: PerfilDonanteProyectoVigente
  description: Endpoints para el mockup de Perfil de donante - Proyectos Vigentes
- name: PerfilDonanteProyectoProceso
  description: Endpoints para el mockup de Perfil de donante - Proyectos en Proceso
- name: ListadoDonadores
  description: Endpoints para el mockup de Listado de donadores
- name: ConfirmarDonacion
  description: Endpoints para el mockup de Confirmar Donacion
  
  
- name: persona
  description: Endpoints para la gestion de personas
- name: donador
  description: Endpoints para la gestion de donador
- name: usuario
  description: Endpoints para la gestion de usuario
- name: proyecto
  description: Endpoints para la gestion de proyecto
- name: donacion
  description: Endpoints para la gestion de donador
- name: contrato
  description: Endpoints para la gestion de contrato

# schemes:
# - http    
paths:
  /contrato/{id_contrato}:
    get:
      tags:
      - RegistroDonante
      summary: Buscar contrato por Id
      description: Retorna un donador
      operationId: getContratoById
      parameters:
      - name: id_contrato
        in: path
        description: ID del contrato a retornar
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contrato'
        404:
          description: No se encontro el donador solicitado
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'  
  /persona:
    post:
      tags:
      - RegistroDonante
      summary: Crear persona
      operationId: addPersona
      requestBody:
        description: Agregar una nueva persona a la BD
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/persona'
          application/xml:
            schema:
              $ref: '#/components/schemas/persona'
        required: true
      responses:
        200:
          description: Crear nueva persona
        404:
          description: No existe la tabla persona donde guardar el nuevo dato
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
########################################################################  
  /donador:
    get:
      tags:
      - ListadoDonadores
      summary: Muestra todos los donadores
      description: Retorna todos los donadores registrados en el sistema
      operationId: getAllDonador
      responses:
        200:
          description: Se encontro los donadores almacenados en la base de datos
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/donador'
        404:
          description: No existen donadores en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
    post:
      tags:
      - RegistroDonante
      summary: Agrega un nuevo donador
      operationId: addDonador
      requestBody:
        description: Registra un nuevo donador con los datos que se tiene  en el mockup
          Nombre usuario
          Correo electronico
          Nomero de telefono
          Direccion
          Contrasenia
          Confirmar Contrasenia
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/donador'
          application/xml:
            schema:
              $ref: '#/components/schemas/donador'
        required: true
      responses:
        200:
          description: Se registro con exito el nuevo donante
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/donador'
        404:
          description: No existen donadores en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
    put:
      tags:
      - RegistroDonante
      summary: Actualiza un donador existente
      operationId: updateDonador
      requestBody:
        description: Objeto donador que tiene que ser agregada
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/donador'
          application/xml:
            schema:
              $ref: '#/components/schemas/donador'
        required: true
      responses:
        400:
          description: Id invalido
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        404:
          description: No existen contratos en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
#######################################################################      
  /contrato:
    get:
      tags:
      - contrato
      summary: Muestra los contratos
      description: Muestra el contrato
      operationId: getContrato
      responses:
        200:
          description: Se encontro el contrato
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contrato'
        404:
          description: No existen contratos en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
##############################################################
  /proyecto/{id_estado}/1:
    get:
      tags:
      - PerfilDonanteProyectoVigente
      summary: Muestra los proyectos vigentes
      description: Retorna todos los proyectos que aun esten en estado de Vigencia  Imagen - Monto a recaudar - Dias que falta
      operationId: getProyectoVigente
      parameters:
      - name: id_estado
        in: path
        description: id del estado del proyecto 
        required: true
        schema:
          type: integer
          example: 1
      responses:
        200:
          description: Operacion exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proyecto'
        404:
          description: No existen proyectos vigentes en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
  /donador/{nombre_donador}:
    get:
      tags:
      - ListadoDonadores
      summary: Buscar donador por nombre completo
      description: Busca un donador por su nombre completo y retorna todos los proyectos en los que participo
      operationId: getDonadorByName
      parameters:
      - name: nombre_donador
        in: path
        description: Nombre completo del donador
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/donador'
            application/json:
              schema:
                $ref: '#/components/schemas/donador'
        404:
          description: No se encontro el donador solicitado
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
  /donador/{id_donador}:
    get:
      tags:
      - donador
      summary: Buscar donador por Id
      description: Busca un donador por su nombre y retorna todos los proyectos en los que participo
      operationId: getDonadorById
      parameters:
      - name: id_donador
        in: path
        description: ID of pet to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/donador'
            application/json:
              schema:
                $ref: '#/components/schemas/donador'
        404:
          description: No se encontro el donador solicitado
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
    post:
      tags:
      - donador
      summary: Updates a donador with form data
      operationId: addDonadorwithForm
      parameters:
      - name: id_donador
        in: path
        description: ID of pet that needs to be updated
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                usuario:
                  type: string
                  description: Updated name of the pet
                status:
                  type: string
                  description: Updated status of the pet
      responses:
        405:
          description: Entrada de datos incorrecta
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
      
    delete:
      tags:
      - donador
      summary: Elimina un donador
      operationId: deleteDonador
      parameters:
      - name: api_key
        in: header
        schema:
          type: string
      - name: id_donador
        in: path
        description: Donador id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Id invalido
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        404:
          description: No se encontro el donador solicitado
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
  /donador/proyecto/{id_proyecto}:
    get:
      tags:
      - donador
      summary: Mostrar los donadores de un determinado proyecto
      description: Muestra todos los proyectos que un determinado donador realizo data( Proyectos que participo / Monto )
      operationId: getDonadoresByIdProyecto
      parameters:
      - name: id_proyecto
        in: path
        description: ID de las donaciones
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/donacion'
            application/json:
              schema:
                $ref: '#/components/schemas/donacion'
        404:
          description: No se encontro el donador solicitado
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
                
  /usuario/{id_usuario}:
    get:
      tags:
      - usuario
      summary: Get user by user name
      operationId: getUserByName
      parameters:
      - name: id_usuario
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/usuario'
            application/json:
              schema:
                $ref: '#/components/schemas/usuario'
        400:
          description: Invalid username supplied
          content: {}
        404:
          description: User not found
          content: {}
    put:
      tags:
      - usuario
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
      - name: id_usuario
        in: path
        description: name that need to be updated
        required: true
        schema:
          type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/usuario'
        required: true
      responses:
        400:
          description: Invalid user supplied
          content: {}
        404:
          description: User not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - usuario
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
      - name: id_usuario
        in: path
        description: The name that needs to be deleted
        required: true
        schema:
          type: string
      responses:
        400:
          description: Invalid username supplied
        404:
          description: User not found
          
  /proyecto:
    get:
      tags:
      - proyecto
      summary: Muestra Todos los proyectos
      description: Retorna y muestra todos los proyectos vigentes Titulo - Monto requerido - Tiempo restante
      
      operationId: getAllProyectos
      responses:
        200:
          description: Se encontraron los proyectos vigentes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/donador'
        404:
          description: No existen proyectos vigentes en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
    post:
      tags:
      - proyecto
      summary: Agrega un nuevo proyecto
      operationId: addProyecto
      requestBody:
        description: Objeto p se agrega
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/proyecto'
          application/xml:
            schema:
              $ref: '#/components/schemas/proyecto'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
    
  /proyecto/{nombre_proyecto}:
    get:
      tags:
      - PerfilDonanteProyectoVigente
      summary: Buscar proyecto por nombre
      description: Buscsa un proyecto almacenado en la base datos que sea igual al nombre puesto en el buscador
      operationId: getProyectoByNombre
      parameters:
      - name: nombre_proyecto
        in: path
        description: Nombre del proyecto a retornar
        required: true
        schema:
          type: string
        example: 'Proyecto A'
      responses:
        200:
          description: Operacion exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/proyecto'
        404:
          description: No existen donaciones en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
      
  
  /proyecto/{id_estado}/2:
    get:
      tags:
      - PerfilDonanteProyectoProceso
      summary: Muestra los proyectos en proceso
      description: Retorna todos los proyectos que aun esten en estado de vigencia  Imagen - Nombre del Proyecto - Fecha de inicio - Fecha final
      operationId: getProyectoEnProceso
      parameters:
      - name: id_estado
        in: path
        description: id del estado del proyecto 
        required: true
        schema:
          type: integer
          example: 2
      responses:
        200:
          description: Operacion exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/proyecto'
        404:
          description: No existen donaciones en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'     
  
  /donacion:
    get:
      tags:
      - donacion
      summary: Retorna todas las donaciones
      description: Retorna todas las donaciones almacenadas
      operationId: getDonacion
      responses:
        200:
          description: Operacion exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/donacion'
        404:
          description: No existen donaciones en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
    post:
      tags:
      - ConfirmarDonacion
      summary: Agrega una nueva donacion
      operationId: addDonacion
      requestBody:
        description: Objeto donador se agrega
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/donacion'
          application/xml:
            schema:
              $ref: '#/components/schemas/donacion'
        required: true
      responses:
        404:
          description: No existen donaciones en la base de datos
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        405:
          description: Entrada de datos invalida
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/error'
#########################
#Components
#########################
  
        
components:
#################
#Schemas
##################
  schemas:
    error:
      type: object
      properties:
        errorCode:
          type: integer
          format: int64
        errorMessage:
          type: string
          description:  Mensaje del error
        errorDescription:
          type: string
          description: La descripcion en detalle del error
    estado:
      type: object
      properties:
        id_estado:
          type: integer
          description: Codigo unico del estado
        estado:
          type: string
      
    area:
      type: object
      properties:
        id_fecha:
          type: integer
          description: Codigo unico de la fecha valor minimo 1
        anio:
          type: string
    tipo_contrato:
      properties:
        id_tipo_contrato:
          type: integer
          description: Codigo unico del tipo de emprendimiento valor minimo 1
        tipo_contrato:
          type: string
          description: El tipo de emprendimiento que puede ser (basico, intermedio)
          
    tipo_emprendimiento:
      properties:
        id_tipo_emprendimiento:
          type: integer
          description: Codigo unico del tipo de emprendimiento valor minimo 1
        tipo_emprendimiento:
          type: string
          description: El tipo de emprendimiento que puede ser (basico, intermedio)
        id_area: 
          $ref: '#/components/schemas/area'
          
    fecha:
      type: object
      properties:
        id_fecha:
          type: integer
          description: Codigo unico de la fecha valor minimo 1
        anio:
          type: integer
          description: anio cardinal
        mes:
          type: string
          description: Mes (Enero....Diciembre)
        dia:
          type: integer
        fecha:
          type: string
          description: Mes (Enero....Diciembre)
    tipo_usuario:
      type: object
      properties: 
        id_tipo_usuario:
          type: integer
          format: int32
          description: Codigo unico de la fecha valor minimo 1
        tipo_usuario:
          type: string
          description: Codigo unico de la fecha valor minimo 1
    imagen:
      type: object
      properties:
        id_imagen:
          type: integer
          format: int64
        src_imagen:
          type: string
          format: int64
          description: codigo de ubicacion de la imagen
        nombre:
          type: string
          description: nombre de la imagen 
    
    departamento:
      type: object
      properties:
        id_departamento:
          type: integer
          format: int64
        departamento:
          type: string
          
    ciudad:
      type: object
      properties:
        id_ciudad:
          type: integer
          format: int64
        ciudad:
          type: string
        id_departamento:
          $ref: '#/components/schemas/departamento'
       
    direccion:
      type: object
      properties:
        id_persona:
          type: integer
          format: int64
        id_ciudad:
          $ref: '#/components/schemas/ciudad'
        zona:
          type: string
        calle:
          type: string
        longitud:
          type: integer
        latitud:
          type: integer
    
    persona:
      type: object
      properties:
        id_persona:
          type: integer
          description: Codigo unico de la persona
        nombre:
          type: string
          description: Nombre de la persona
        apellido_paterno:
          type: string
          description: Apellido paterno de la persona
        apellido_materno:
          type: string
          description: Apellido materno de la persona
        apellido_casado:
          type: string
          description: Apellido de casada de la persona(mujer) este espacio es opcional
        telefono:
          type: integer
          description: Telefono celular o local de la persona natural
        fecha_nacimiento:
          type: string
          format: date-time
          description: Fecha de nacimiento en formato dd/mm/aa
        id_direccion:
          $ref: '#/components/schemas/direccion'
  
    usuario:
      type: object
      properties:
        id_usuario:
          type: integer
          format: int64
          description: Codigo unico del usuario
        id_tipo_usuario:
          $ref: '#/components/schemas/tipo_usuario'
        usuario:
          type: integer
          format: int64
        contrasena:
          type: string
          format: password
      xml:
        name: usuario
    
    contrato:
      type: object
      properties:
        id_contrato:
          type: integer
          format: int64
          description: Codigo unico del contrato
        contrato:
          type: string
          description: Contenido del contrato
        id_tipo_contrato:
          $ref: '#/components/schemas/tipo_contrato'
      xml:
        name: contrato
    
    emprendedor:
      type: object
      properties:
        id_emprendedor:
          $ref: '#/components/schemas/tipo_usuario'
        id_imagen:
          $ref: '#/components/schemas/imagen'
        id_tipo_emprendimiento:
          $ref: '#/components/schemas/tipo_emprendimiento'
        id_contrato:
          $ref: '#/components/schemas/contrato'
        id_persona:
          $ref: '#/components/schemas/persona'
        id_usuario:
          $ref: '#/components/schemas/usuario'
    donador:
      type: object
      properties:
        id_donador:
          type: integer
          description: Codigo unico del usuario
        id_contrato:
          $ref: '#/components/schemas/contrato'
        id_persona:
          $ref: '#/components/schemas/persona'
        id_usuario:
          $ref: '#/components/schemas/usuario'
      xml:
        name: donador
    
    proyecto:
      type: object
      properties:
        id_proyecto:
          type: integer
          format: int64
          description: Codigo unico del proyecto valor minimo 1
        nombre:
          type: string
          description: Nombre del proyecto
        descripcion:
          type: string
          description: Descripcion especifica de que trata el proyecto almacenado
        monto_recaudar:
          type: number
          format: double
          description: Monto objetivo a recaudar
        id_fecha_inicio:
          $ref: '#/components/schemas/fecha'
        id_fecha_final:
          $ref: '#/components/schemas/usuario' 
        id_emprendedor:
          $ref: '#/components/schemas/emprendedor'
        id_estado:
          type: integer
          format: int32
          description: Codigo unico de la fecha valor minimo 1
    donacion:
      type: object
      properties:
        id_donacion:
          type: integer
          format: int64
          description: Codigo unico del proyecto valor minimo 1
        id_proyecto:
          $ref: '#/components/schemas/proyecto' 
        id_donador:
          $ref: '#/components/schemas/donador'
        id_fecha:
          $ref: '#/components/schemas/fecha'
        monto:
          type: integer
          format: int64
        hora:
          type: string
  parameters:
    offsetParam:
      name: offset
      in: query
      schema:
        type: integer
        minimum: 0
      description: La cantidad de elementos que se deben omitir antes de devolver los resultados
    limitParam:
      in: query
      name: limit
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 1
      description: La cantidad de elemento para devolver
  